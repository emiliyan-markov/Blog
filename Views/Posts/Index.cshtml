@using Blog.Classes;
@using Blog.Models;
@using PagedList.Mvc;

@model PagedList.IPagedList<Blog.Models.Post>


@{
    ViewBag.Title = "Index";
}

<h2>All Posts</h2>
@using (Html.BeginForm(FormMethod.Get))
{
    <p>
        Search by keyword: @Html.TextBox("SearchString")
        <input type="submit" value="Search" />
    </p>
}
<article>
    <table class="table">
        <tr>
            <th>
                Title
            </th>
            <th>
                Body
            </th>
            <th>
                Date
            </th>
            <th>
                Author
            </th>
            <th>
                Actions
            </th>

        </tr>
@foreach (var item in Model)
{
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Utils.CutText(item.Body)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Date)
        </td>
        <td>
            @if (item.Author != null)
            {
                @item.Author.UserName
            }
            else
            {
                @:No Author
            }
        </td>
        <td>
            @if (User.IsInRole("Administrators"))
            {
                @Html.ActionLink("Edit", "Edit", new { id = item.Id })
            }

            @Html.ActionLink("Details", "Details", new { id = item.Id })

            @if (User.IsInRole("Administrators"))
            {
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            }
        </td>
    </tr>
}

</table>
</article>

    <br />
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
